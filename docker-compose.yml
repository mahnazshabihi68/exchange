version: '3.5'
services:
  laravel:
    container_name: laravel
    build:
      context: ./Docker/php
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: vorna/php
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./Docker/php/bolt.ini:/usr/local/etc/php/conf.d/bolt.ini
      - ~/.phpbrew/php/php-7.4.23/lib/php/extensions/no-debug-non-zts-20190902/bolt.so:/usr/local/lib/php/extensions/no-debug-non-zts-20190902/bolt.so
    ports:
      - '${APP_PORT:-90}:9000'
    networks:
      - backend
    depends_on:
      - mysql
    links:
      - mysql

  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD:-secret}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    volumes:
      - ./Docker/mysql/db-backup:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - backend

  nginx:
    container_name: nginx
    image: nginx:stable
    volumes:
      - ./Docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./:/var/www/html
      - ./public:/usr/share/nginx/html
      - ./Docker/nginx/log:/var/log/nginx/
      - /var/www/certbot/conf:/etc/letsencrypt
      - /var/www/certbot/www:/var/www/certbot
      - ./storage:/var/www/html/public/storage
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - '${NGINX_PORT:-80}:80'
      - 443:443
    links:
      - laravel
    depends_on:
      - laravel
    networks:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /var/www/certbot/conf:/etc/letsencrypt
      - /var/www/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend

networks:
  backend:
